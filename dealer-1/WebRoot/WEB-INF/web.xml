<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>

	<servlet>
		<servlet-name>appImage</servlet-name>
		<servlet-class>com.ailk.yd.mapp.action.AppImageServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>appImage</servlet-name>
		<url-pattern>/appImage.so</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>hibernateFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<!-- Filter 定义 -->

	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<!-- encodingFilter mapping -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>,classpath:mapp-base.xml,WEB-INF/spring-servlet.xml</param-value> -->

		<param-value>classpath:mapp-base.xml,classpath:applicationContext*.xml,classpath*:com/ailk/butterfly/**/*applicationContext-butterfly.xml,WEB-INF/springServlet-servlet.xml</param-value>
	</context-param>

	<servlet>
		<servlet-name>springServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>*.so</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>springServlet</servlet-name>
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>

	<servlet>
		<servlet-name>MAPPService</servlet-name>
		<servlet-class>com.ai.mapp.base.http.MAPPHTTPService</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>MAPPService</servlet-name>
		<url-pattern>/MAPPService</url-pattern>
	</servlet-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
		<listener-class>com.ailk.yd.mapp.client.action.DealerContextListener</listener-class>
		<listener-class>com.ailk.butterfly.core.spring.SpringInitListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>Kaptcha</servlet-name>
		<servlet-class>com.google.code.kaptcha.servlet.KaptchaServlet</servlet-class>
		<init-param>
			<param-name>kaptcha.image.width</param-name>
			<param-value>110</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.image.height</param-name>
			<param-value>50</param-value>
		</init-param>

		<init-param>
			<param-name>kaptcha.textproducer.char.length</param-name>
			<param-value>4</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.size</param-name>
			<param-value>40</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.noise.color</param-name>
			<param-value>31,97,152</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.color</param-name>
			<param-value>31,97,152</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.textproducer.font.names</param-name>
			<param-value>宋体,楷体,微软雅黑</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.obscurificator.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.ShadowGimpy</param-value>
		</init-param>
		<init-param>
			<param-name>kaptcha.noise.impl</param-name>
			<param-value>com.google.code.kaptcha.impl.NoNoise </param-value>
		</init-param>
	</servlet>

	<servlet-mapping>
		<servlet-name>Kaptcha</servlet-name>
		<url-pattern>/Kaptcha.jpg</url-pattern>
		<url-pattern>/lang/Kaptcha.jpg</url-pattern>
	</servlet-mapping>

	<!-- 404 页面不存在错误 -->
	<error-page>
		<error-code>404</error-code>
		<location>/error/404.html</location>
	</error-page>
	<!-- 500 服务器内部错误 -->
	<error-page>
		<error-code>500</error-code>
		<location>/error/500.html</location>
	</error-page>


</web-app>
