<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"   
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
	http://www.springframework.org/schema/util   
    http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<mvc:annotation-driven />
	
	<!-- 自动扫描注解的Controller --> 
	<context:component-scan base-package="com.ailk.mapp.controller"/>
	
	<!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd --> 
	<mvc:resources mapping="/js/jquery/**" location="/static/jquery/" />
	<!-- 对静态资源文件的访问 ）--> 
	<!-- 
<mvc:resources mapping="/images/**" location="/images/" cache-period="31556926"/>  
<mvc:resources mapping="/js/**" location="/js/" cache-period="31556926"/>  
<mvc:resources mapping="/css/**" location="/css/" cache-period="31556926"/>  -->  

	<!-- 处理在类级别上的@RequestMapping注解-->  
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" ></bean>

	 <!-- 处理方法级别上的@RequestMapping注解--> 
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" >
		<property name="messageConverters"> 
	        <list> 
	            <ref bean="jacksonMessageConverter" />    <!-- 注册JSON Converter -->
	        </list> 
	    </property> 
	</bean>
	
	<!-- spring ajax json message convert -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter" >
		<!-- 为了处理返回的JSON数据的编码，默认是ISO-88859-1的，这里把它设置为UTF-8,解决有乱码的情况 -->   
        <property name="supportedMediaTypes">
            <list>
                  <value>text/html;charset=UTF-8</value>
                  <value>application/json;charset=UTF-8</value> 
            </list>    
        </property>
	</bean>
	
	<!-- ③：对模型视图名称的解析，即在模型视图名称添加前后缀  -->  
	<bean id="velocityConfigurer" name="velocityConfigurer" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath">
            <value>/WEB-INF/velocity</value>
        </property>
        <property name="velocityProperties">
            <props>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="contentType">text/html;charset=UTF-8</prop>
                <prop key="velocimacro.library">macro/macros.vm</prop>
         	</props>
        </property>
    </bean>
	
	<bean id="vmViewResolver" class="com.ailk.web.VelocityLayoutViewResolverExt">
		<property name="cache" value="false" />
		<property name="prefix" value="" />
		<property name="suffix" value=".vm" />
		<property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml" /> <!--toolbox配置文件路径-->
		<property name="dateToolAttribute" value="dateTool" />  <!--日期函数名称-->
        <property name="numberToolAttribute" value="number" /><!--数字函数名称-->
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
        <property name="requestContextAttribute" value="rc"/> <!--request属性引用名称-->
        <!-- <property name="layoutUrl" value="templates/layout/default.vm"/> --><!--指定layout文件--> 
		<property name="contentType" value="text/html;charset=UTF-8" />
		
		<property name="layoutUrl" value="layout/layout.vm"/>  
		<property name="layoutKey" value="layout"/>  
        <property name="screenContentKey" value="screen_content"/>
        <property name="attributes">
	        <props>
	        	<prop key="relase">true</prop><!-- relase;debug -->
	        </props>
        </property>
	</bean>
</beans>
