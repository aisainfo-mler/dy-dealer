package com.ailk.ts.dal.ibatis;

import com.ailk.ts.dal.ibatis.model.Repository;
import com.ailk.ts.dal.ibatis.model.RepositoryExample;
import java.util.List;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class RepositoryDAOImpl extends SqlMapClientDaoSupport implements RepositoryDAO {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public RepositoryDAOImpl() {
        super();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int countByExample(RepositoryExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("repository.countByExample", example);
        return count;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int deleteByExample(RepositoryExample example) {
        int rows = getSqlMapClientTemplate().delete("repository.deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int deleteByPrimaryKey(Long repCode) {
        Repository _key = new Repository();
        _key.setRepCode(repCode);
        int rows = getSqlMapClientTemplate().delete("repository.deleteByPrimaryKey", _key);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public Long insert(Repository record) {
        Object newKey = getSqlMapClientTemplate().insert("repository.insert", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public Long insertSelective(Repository record) {
        Object newKey = getSqlMapClientTemplate().insert("repository.insertSelective", record);
        return (Long) newKey;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    @SuppressWarnings("unchecked")
    public List<Repository> selectByExample(RepositoryExample example) {
        List<Repository> list = getSqlMapClientTemplate().queryForList("repository.selectByExample", example);
        return list;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public Repository selectByPrimaryKey(Long repCode) {
        Repository _key = new Repository();
        _key.setRepCode(repCode);
        Repository record = (Repository) getSqlMapClientTemplate().queryForObject("repository.selectByPrimaryKey", _key);
        return record;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int updateByExampleSelective(Repository record, RepositoryExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("repository.updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int updateByExample(Repository record, RepositoryExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("repository.updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int updateByPrimaryKeySelective(Repository record) {
        int rows = getSqlMapClientTemplate().update("repository.updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table repository
     *
     * @mbggenerated
     */
    public int updateByPrimaryKey(Repository record) {
        int rows = getSqlMapClientTemplate().update("repository.updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table repository
     *
     * @mbggenerated
     */
    protected static class UpdateByExampleParms extends RepositoryExample {
        private Object record;

        public UpdateByExampleParms(Object record, RepositoryExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}